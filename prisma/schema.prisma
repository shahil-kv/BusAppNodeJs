generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model refresh_tokens {
  id         Int       @id @default(autoincrement())
  user_id    Int
  token      String    @unique @db.VarChar(255)
  expires_at DateTime  @db.Timestamptz(6)
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  updated_at DateTime? @default(now()) @db.Timestamptz(6)
  users      users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([user_id], map: "idx_refresh_tokens_user_id")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model users {
  id                        Int              @id @default(autoincrement())
  phone_number              String           @unique @db.VarChar(15)
  password_hash             String           @db.VarChar(255)
  full_name                 String           @db.VarChar(255)
  email                     String?          @unique @db.VarChar(255)
  is_phone_verified         Boolean?         @default(false)
  phone_verification_otp    String?          @db.VarChar(6)
  phone_verification_expiry DateTime?        @db.Timestamptz(6)
  is_premium                Boolean?         @default(false)
  premium_expiry            DateTime?        @db.Timestamptz(6)
  role                      String?          @default("USER") @db.VarChar(20)
  created_at                DateTime?        @default(now()) @db.Timestamptz(6)
  updated_at                DateTime?        @default(now()) @db.Timestamptz(6)
  refresh_tokens            refresh_tokens[]

  @@index([email], map: "idx_users_email")
  @@index([phone_number], map: "idx_users_phone_number")
}
